{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["createSvgIcon","createElement","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","SwitchBase","type","root","concat","capitalize","checked","disabled","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","name","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","useRef","_React$useState","useState","exited","setExited","setAutoHideTimer","useCallback","autoHideDurationParam","autoHideDurationBefore","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","window","addEventListener","removeEventListener","onClickAway","event","appear","in","timeout","direction","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","_props$mouseEvent","mouseEvent","_props$touchEvent","touchEvent","movedRef","nodeRef","mountedRef","handleNodeRef","handleOwnRef","instance","findDOMNode","handleRef","handleClickAway","defaultPrevented","doc","documentElement","contains","target","handleTouchMove","mappedTouchEvent","document","mappedMouseEvent","Fragment","cloneElement","SnackbarContent","component","variant","variantMapping","body1","body2","role","square","elevation","emphasis","background","default","getContrastText","flexWrap","padding","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft","marginRight","Switch","_props$edge","edge","_props$size","size","thumb","start","edgeStart","end","edgeEnd","small","switchBase","input","track","width","height","overflow","boxSizing","flexShrink","verticalAlign","grey","transition","transitions","create","duration","shortest","opacity","common","black","white","sizeSmall","boxShadow","shadows"],"mappings":"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","file":"static/js/8.8de0ba5b.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, {}, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, {}, left3)))\n  };\n};\nvar Snackbar = React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      autoHideDuration = props.autoHideDuration,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1]; // Timer that controls delay before snackbar auto hides\n\n\n  var setAutoHideTimer = React.useCallback(function (autoHideDurationParam) {\n    var autoHideDurationBefore = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n    if (!onClose || autoHideDurationBefore == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      var autoHideDurationAfter = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n      if (!onClose || autoHideDurationAfter == null) {\n        return;\n      }\n\n      onClose(null, 'timeout');\n    }, autoHideDurationBefore);\n  }, [autoHideDuration, onClose]);\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer();\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      if (resumeHideDuration != null) {\n        setAutoHideTimer(resumeHideDuration);\n        return;\n      }\n\n      setAutoHideTimer(autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['top', 'bottom']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"timeout\"` (`autoHideDuration` expired) or: `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If true, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport setRef from '../utils/setRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nvar ClickAwayListener = React.forwardRef(function ClickAwayListener(props, ref) {\n  var children = props.children,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n      onClickAway = props.onClickAway;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  var handleNodeRef = useForkRef(nodeRef, ref); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleNodeRef, ReactDOM.findDOMNode(instance));\n  }, [handleNodeRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = useEventCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    } // The child might render null.\n\n\n    if (!nodeRef.current) {\n      return;\n    } // Multi window support\n\n\n    var doc = ownerDocument(nodeRef.current);\n\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !nodeRef.current.contains(event.target)) {\n      onClickAway(event);\n    }\n  });\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport Typography from '../Typography';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    }),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\"]);\n\n  return React.createElement(Paper, _extends({\n    component: Typography,\n    variant: \"body2\",\n    variantMapping: {\n      body1: 'div',\n      body2: 'div'\n    },\n    role: \"alertdialog\",\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(50%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}