{"version":3,"sources":["views/Costing/List/components/CostingForm/CostingForm.js","views/Costing/List/List.js","views/Costing/List/index.js"],"names":["CostingForm","state","values","Object","Snackbar","open","message","inputChangeHandler","event","specialTimeExtras","index","test","target","value","name","Number","setState","map","item","itemIndex","submitHandler","options","preventDefault","formVaues","method","apiUrls","costing","put_by_id","url","getAbsoluteUrl","id","data","axios","then","response","console","log","catch","error","getHours","date","time","Date","getUTCHours","handleClose","this","props","nextProps","nextState","nextContext","classes","Grid","container","spacing","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","key","onClose","lg","Card","className","cardMargin","Typography","title","color","gutterBottom","variant","minQty","maxQty","Divider","CardContent","content","Fragment","hasOwnProperty","TextField","fullWidth","inputProps","min","InputProps","startAdornment","InputAdornment","position","label","margin","onChange","type","baseCost","weekEndOrHolydayExtra","perPickupExtra","winterPickupExtra","perMile","newVehicleExtra","winchExtra","winterExtra","collusionWinterExtra","collisionSceneExtra","buyAverage","buyQuality","gasolin","deisel","start","end","e","extra","CardActions","cardAction","Button","cardButton","onClick","size","Component","withStyles","theme","padding","button","display","marginLeft","fontSize","marginTop","fontWeight","CostingList","list","expanded","service","category","subCategory","distance","handleExpandedChange","panel","isExpanded","newList","getServiceTitle","loading","Array","fill","Skeleton","height","getCostingList","isArray","forEach","items","CardHeader","LinearProgress","inner","ExpansionPanel","ExpansionPanelSummary","aria-controls","expandIcon","ExpandMore","heading","ExpansionPanelDetails","maxDistance","minDistance","connect","dispatch","actions","root","flexGrow","maxWidth","minWidth"],"mappings":"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","file":"static/js/44.89d35efc.chunk.js","sourcesContent":["/*eslint react/no-set-state:0*/\n\nimport React, { Component } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  Divider,\n  Grid,\n  TextField,\n  Button,\n  InputAdornment,\n  Snackbar,\n  Typography\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\n\nimport { axios, apiUrls } from 'config'\n\nconst styles = (theme) => ({\n  content: {\n    padding: theme.spacing(1),\n  },\n  cardMargin: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  cardAction: {\n    display: 'flex',\n  },\n  cardButton: {\n    marginLeft: 'auto',\n  },\n  title: {\n    fontSize: 14,\n    marginLeft: theme.spacing(1),\n    marginTop:theme.spacing(1),\n    fontWeight: 'bolder'\n  },\n});\n\nclass CostingForm extends Component {\n  state = {\n    values:Object(),\n    Snackbar: {\n      open: false,\n      message: 'I love snacks'\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      values: this.props.data\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return true\n  }\n\n  inputChangeHandler = (event, index=-1) => {\n    if(/^\\d+$/.test(event.target.value)){\n      var specialTimeExtras;\n      var values;\n      if(index === -1){\n        values = {\n          ...this.state.values,\n          [event.target.name]: Number(event.target.value)\n        }\n        // console.log(values)\n\n        this.setState({\n          values: values\n        })\n      }else{\n        specialTimeExtras = this.state.values.specialTimeExtras.map((item, itemIndex)=>{\n          if(itemIndex === index){\n            return {\n              ...item,\n              [event.target.name]: Number(event.target.value)\n            }\n          }else{\n            return item\n          }\n        });\n\n        this.setState({\n          values: {\n            ...this.state.values,\n            specialTimeExtras: specialTimeExtras\n          }\n        })\n      }\n    }\n\n  }\n\n  submitHandler = (event)=>{\n    var options;\n    event.preventDefault()\n\n    let formVaues = {...this.state.values}\n    options = {\n      method: apiUrls.costing.put_by_id.method,\n      url: apiUrls.costing.put_by_id.getAbsoluteUrl(formVaues.id),\n      data: formVaues\n    };\n    axios(options).then((response)=>{\n      console.log(response.data)\n      this.setState({\n        Snackbar: {\n          open:true,\n          message: 'Costing Updated Successfully'\n        }\n      })\n    }).catch((error)=>{\n      console.log(error.response)\n      this.setState({\n        Snackbar: {\n          open:true,\n          message: 'Costing Failed To Update, Try Again'\n        }\n      })\n    })\n\n    console.log(formVaues)\n\n  }\n\n  getHours = (date)=>{\n    let time = new Date(date)\n    if(time.getUTCHours() >= 12){\n      return `${time.getUTCHours() % 12} PM`\n    }else{\n      return `${time.getUTCHours()} AM`\n    }\n  }\n  handleClose = (event)=>{\n    let Snackbar = {...this.state.Snackbar}\n    this.setState({\n      Snackbar: {\n        ...Snackbar,\n        open:false\n      }\n    })\n  }\n\n\n  render() {\n    const { classes, data } = this.props;\n    return (\n      <Grid\n        container\n        spacing={3}\n      >\n        <Snackbar\n          anchorOrigin={{ vertical:'top', horizontal: 'center' }}\n          autoHideDuration={3000}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          key={'top,center'}\n          message={<span id=\"message-id\">{this.state.Snackbar.message}</span>}\n          onClose={this.handleClose}\n          open={this.state.Snackbar.open}\n        />\n        <Grid\n          item\n          lg={12}\n        >\n          <Card className={classes.cardMargin}>\n            <Typography\n              className={classes.title}\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"subtitle2\"\n            >\n              {(data.minQty === data.maxQty)? `For ${data.minQty} Car`: `For ${data.minQty} - ${data.maxQty} Cars`}\n            </Typography>\n            <Divider />\n            <CardContent className={classes.content}>\n              <Grid\n                container\n                spacing={3}\n              >\n\n                <React.Fragment>\n                  {(this.state.values.hasOwnProperty('baseCost')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Base Cost\"\n                        margin=\"dense\"\n                        name=\"baseCost\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.baseCost}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('weekEndOrHolydayExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Weekend Or Holyday Extra\"\n                        margin=\"dense\"\n                        name=\"weekEndOrHolydayExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.weekEndOrHolydayExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('perPickupExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Per Pickup Extra\"\n                        margin=\"dense\"\n                        name=\"perPickupExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.perPickupExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('winterPickupExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Winter Pickup Extra\"\n                        margin=\"dense\"\n                        name=\"winterPickupExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.winterPickupExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('perMile')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Per Mile\"\n                        margin=\"dense\"\n                        name=\"perMile\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.perMile}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('newVehicleExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"New Vehicle Extra\"\n                        margin=\"dense\"\n                        name=\"newVehicleExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.newVehicleExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('winchExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Winch Call Extra\"\n                        margin=\"dense\"\n                        name=\"winchExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.winchExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('winterExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Winter Extra\"\n                        margin=\"dense\"\n                        name=\"winterExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.winterExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('collusionWinterExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Collusion Winter Extra\"\n                        margin=\"dense\"\n                        name=\"collusionWinterExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.collusionWinterExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('collisionSceneExtra')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Collusion Scene Extra\"\n                        margin=\"dense\"\n                        name=\"collisionSceneExtra\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.collisionSceneExtra}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('buyAverage')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Buy Average\"\n                        margin=\"dense\"\n                        name=\"buyAverage\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.buyAverage}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('buyQuality')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Buy Quality\"\n                        margin=\"dense\"\n                        name=\"buyQuality\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.buyQuality}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('gasolin')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Gasolin\"\n                        margin=\"dense\"\n                        name=\"gasolin\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.gasolin}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('deisel')) && (\n                    <Grid\n                      item\n                      lg={3}\n                    >\n                      <TextField\n                        fullWidth\n                        inputProps={{\n                          min: 0\n                        }}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                        }}\n                        label=\"Deisel\"\n                        margin=\"dense\"\n                        name=\"deisel\"\n                        onChange={this.inputChangeHandler}\n                        type=\"number\"\n                        value={this.state.values.deisel}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  )}\n                  {(this.state.values.hasOwnProperty('specialTimeExtras')) && this.state.values.specialTimeExtras.map((item, index)=>{\n                    return (\n                      <Grid\n                        item\n                        lg={3}\n                      >\n                        <TextField\n                          fullWidth\n                          inputProps={{\n                            min: 0\n                          }}\n                          InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\n                          }}\n                          label={`Between ${this.getHours(item.start)} -  ${this.getHours(item.end)} Extra`}\n                          margin=\"dense\"\n                          name=\"extra\"\n                          onChange={(e)=>this.inputChangeHandler(e, index)}\n                          type=\"number\"\n                          value={item.extra}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                    )\n                  })}\n                </React.Fragment>\n              </Grid>\n            </CardContent>\n            <CardActions className={classes.cardAction}>\n              <Button\n                className={classes.cardButton}\n                color=\"primary\"\n                onClick={this.submitHandler}\n                size=\"small\"\n                variant=\"contained\"\n              >\n                Update\n              </Button>\n            </CardActions>\n          </Card>\n\n        </Grid>\n      </Grid>\n    )\n  }\n\n\n}\n\nexport default withStyles(styles)(CostingForm);\n","/*eslint react/no-set-state:0*/\n\n\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport * as actions from 'actions';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography, LinearProgress\n} from '@material-ui/core';\nimport {\n  ExpandMore\n} from '@material-ui/icons';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport CostingForm from './components/CostingForm'\nimport { Skeleton } from '@material-ui/lab';\n\n\nconst styles = (theme) => ({\n  root: {\n    height: 216,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  content: {\n    padding: theme.spacing(1),\n  },\n  inner: {\n    minWidth: 700,\n    margin: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n});\n\nclass CostingList extends Component {\n  state = {\n    list: Object(),\n    expanded: {\n      service: false,\n      category: false,\n      subCategory: false,\n      distance: false\n    }\n  }\n\n  handleExpandedChange = (panel, type) => (event, isExpanded) => {\n    let expanded = {...this.state.expanded};\n    if(type === 'service'){\n      if(isExpanded){\n        expanded = {\n          service: panel,\n          category: false,\n          subCategory: false,\n          distance: false\n        }\n      }else{\n        expanded = {\n          service: false,\n          category: false,\n          subCategory: false,\n          distance: false\n        }\n      }\n\n    }else if(type === 'category'){\n      if(isExpanded){\n        expanded = {\n          ...expanded,\n          category:panel,\n          subCategory: false,\n          distance: false\n        }\n      }else{\n        expanded = {\n          ...expanded,\n          category: false,\n          subCategory: false,\n          distance: false\n        }\n      }\n      \n    }else if(type === 'subCategory'){\n      if(isExpanded){\n        expanded = {\n          ...expanded,\n          subCategory: panel,\n          distance: false\n        }\n      }else{\n        expanded = {\n          ...expanded,\n          subCategory: false,\n          distance: false\n        }\n      }\n    }else if(type === 'distance'){\n      if(isExpanded){\n        expanded = {\n          ...expanded,\n          distance: panel\n        }\n      }else{\n        expanded = {\n          ...expanded,\n          distance: false\n        }\n      }\n    }\n    console.log(expanded)\n\n    this.setState({\n      expanded:expanded\n    })\n  };\n\n  componentDidMount() {\n    this.props.getCostingList()\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props !== nextProps){\n      if(Array.isArray(nextProps.list.data)){\n        let newList = Object();\n        nextProps.list.data.forEach((service)=>{\n          service.items.forEach((category)=>{\n            category.items.forEach((subCategory)=>{\n              subCategory.items.forEach((data)=>{\n                if(data.hasOwnProperty('items')){\n                  data.items.forEach((item)=>{\n                    newList[item.id] = item\n                  })\n                }else{\n                  newList[data.id] = data\n                }\n              })\n            })\n          })\n        });\n        this.setState({\n          list: newList\n        });\n      }\n\n      return false\n    }else {\n      console.log(nextState.expanded)\n      return true\n    }\n  }\n\n\n  inputChangeHandler = (event, id) => {\n    let newList = {...this.state.list}\n    newList[id][event.target.name] = event.target.value\n    this.setState({\n      list: newList\n    })\n  }\n\n  getServiceTitle = (service)=>{\n    const serviceTitle = {\n      'AutoVibration': 'Auto Vibration',\n      'OilChange': 'Oil Change',\n      'Tech_BadBattery': 'Replace Battery',\n      'Tech_FlatTyre': 'Flat Tire',\n      'Tech_GasRefill': 'Fuel Refill',\n      'Tech_JumpStart': 'Jump Start',\n      'Tech_Lockout': 'Lockout of Vehicle',\n      'TowHaul': 'Tow / Haul'\n    };\n\n    return serviceTitle[service]\n  }\n  loading = ()=>{\n    var data;\n    let skelton = [];\n    data = Array(10).fill(1).map((item)=>{\n      return <Skeleton\n        height={50}\n        variant=\"text\"\n      />\n    });\n    return [...skelton, ...data]\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardHeader\n          title=\"Costing Tree View\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            {(!this.props.list.data) && (\n              <React.Fragment>\n                <LinearProgress />\n                {this.loading()}\n              </React.Fragment>\n            )}\n            {this.props.list.data && (\n              <div className={classes.inner}>\n                {this.props.list.data.map((service)=>{\n                  return (\n                    <ExpansionPanel\n                      expanded={this.state.expanded.service === service.service}\n                      onChange={this.handleExpandedChange(service.service, 'service')}\n                    >\n                      <ExpansionPanelSummary\n                        aria-controls=\"panel1a-content\"\n                        expandIcon={<ExpandMore />}\n                        id=\"panel1a-header\"\n                      >\n                        <Typography className={classes.heading}><b>Service:</b> {this.getServiceTitle(service.service)}</Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        {(this.state.expanded.service === service.service) && (\n                          <Grid\n                            container\n                            spacing={3}\n                          >\n                            {service.items.map((category) => {\n                              return (\n                                <Grid\n                                  item\n                                  lg={12}\n                                >\n                                  <ExpansionPanel\n                                    expanded={this.state.expanded.category === (`${service.service}-${category.category}`)}\n                                    onChange={this.handleExpandedChange((`${service.service}-${category.category}`), 'category')}\n                                  >\n                                    <ExpansionPanelSummary\n                                      aria-controls=\"panel1a-content\"\n                                      expandIcon={<ExpandMore />}\n                                      id=\"panel1a-header\"\n                                    >\n                                      <Typography className={classes.heading}><b>Category:</b> {category.category}</Typography>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails>\n                                      {(this.state.expanded.category === (`${service.service}-${category.category}`)) && (\n                                        <Grid\n                                          container\n                                          spacing={3}\n                                        >\n                                          {category.items.map((subCategory)=>{\n                                            return (\n                                              <Grid\n                                                item\n                                                lg={12}\n                                              >\n                                                <ExpansionPanel\n                                                  expanded={this.state.expanded.subCategory === (`${service.service}-${category.category}-${subCategory.subCategory}`)}\n                                                  onChange={this.handleExpandedChange((`${service.service}-${category.category}-${subCategory.subCategory}`), 'subCategory')}\n                                                >\n                                                  <ExpansionPanelSummary\n                                                    aria-controls=\"panel1a-content\"\n                                                    expandIcon={<ExpandMore />}\n                                                    id=\"panel1a-header\"\n                                                  >\n                                                    <Typography className={classes.heading}><b>Type:</b> {subCategory.subCategory}</Typography>\n                                                  </ExpansionPanelSummary>\n                                                  <ExpansionPanelDetails>\n                                                    {(this.state.expanded.subCategory === (`${service.service}-${category.category}-${subCategory.subCategory}`)) && (\n                                                      <Grid\n                                                        container\n                                                        spacing={3}\n                                                      >\n                                                        {subCategory.items.map((item)=>{\n\n                                                          if(item.hasOwnProperty('items')){\n                                                            let label = '';\n                                                            if(item.maxDistance === -1){\n                                                              if(!item.minDistance){\n                                                                label = 'Long Range';\n                                                              }else{\n                                                                label = `Above ${item.minDistance} miles`;\n                                                              }\n\n                                                            }else{\n                                                              label = `From ${item.minDistance} to ${item.maxDistance} miles`;\n                                                            }\n\n                                                            return (\n                                                              <Grid\n                                                                item\n                                                                lg={12}\n                                                              >\n                                                                <ExpansionPanel\n                                                                  expanded={this.state.expanded.distance === (`${service.service}-${category.category}-${subCategory.subCategory}-${label}`)}\n                                                                  onChange={this.handleExpandedChange((`${service.service}-${category.category}-${subCategory.subCategory}-${label}`), 'distance')}\n                                                                >\n                                                                  <ExpansionPanelSummary\n                                                                    aria-controls=\"panel1a-content\"\n                                                                    expandIcon={<ExpandMore />}\n                                                                    id=\"panel1a-header\"\n                                                                  >\n                                                                    <Typography className={classes.heading}><b>Distance: </b>{label}</Typography>\n                                                                  </ExpansionPanelSummary>\n                                                                  <ExpansionPanelDetails>\n                                                                    {(this.state.expanded.distance === (`${service.service}-${category.category}-${subCategory.subCategory}-${label}`)) && (\n                                                                      <Grid\n                                                                        container\n                                                                        spacing={3}\n                                                                      >\n                                                                        {item.items.map((data)=>{\n                                                                          return (\n                                                                            <CostingForm data={data} />\n                                                                          )\n                                                                        })}\n                                                                      </Grid>\n                                                                    )}\n\n                                                                  </ExpansionPanelDetails>\n                                                                </ExpansionPanel>\n                                                              </Grid>\n                                                            )\n                                                          }else{\n                                                            return (\n                                                              <CostingForm data={item} />\n                                                            )\n                                                          }\n                                                        })}\n                                                      </Grid>\n                                                    )}\n\n                                                  </ExpansionPanelDetails>\n                                                </ExpansionPanel>\n                                              </Grid>\n                                            )\n                                          })}\n                                        </Grid>\n                                      )}\n                                    </ExpansionPanelDetails>\n                                  </ExpansionPanel>\n                                </Grid>\n                              )\n                            })}\n                          </Grid>\n                        )}\n\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                  )\n                })}\n              </div>\n            )}\n\n\n\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.costing.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCostingList: () => dispatch( actions.getCostingList() ),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CostingList));\n","export { default } from './List'\n"],"sourceRoot":""}