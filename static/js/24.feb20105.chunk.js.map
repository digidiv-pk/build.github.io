{"version":3,"sources":["../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","templates/CustomerManagementList/components/Header/Header.js","templates/CustomerManagementList/components/Results/Results.js","templates/CustomerManagementList/CustomerManagementList.js","templates/CustomerManagementList/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js"],"names":["_ref","createElement","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","theme","useTheme","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","classes","className","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","withStyles","palette","text","primary","fontSize","typography","pxToRem","padding","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","rest","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","content","inner","minWidth","nameCell","display","avatar","height","width","justifyContent","Results","customers","useState","selectedCustomers","setSelectedCustomers","setPage","setRowsPerPage","Card","CardHeader","action","title","Divider","CardContent","Table","TableHead","TableRow","Checkbox","checked","indeterminate","target","customer","id","align","TableBody","slice","hover","selected","indexOf","selectedIndex","newSelectedCustomers","handleSelectOne","Avatar","src","getInitials","Link","RouterLink","email","location","currency","spent","type","projects","rating","size","CardActions","TablePagination","defaultProps","results","marginTop","CustomerManagementList","setCustomers","useEffect","mounted","axios","get","then","response","data","onFilter","onSearch","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","SwitchBase","capitalize","secondary","colorPrimary","main","backgroundColor","hoverOpacity","colorSecondary"],"mappings":"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","file":"static/js/24.feb20105.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/styles'\nimport { Grid, Typography, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}))\n\nconst Header = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add customer\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { makeStyles } from '@material-ui/styles'\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core'\n\nimport getInitials from 'utils/getInitials'\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}))\n\nconst Results = props => {\n  const { className, customers, ...rest } = props\n\n  const classes = useStyles()\n\n  const [selectedCustomers, setSelectedCustomers] = useState([])\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  const handleSelectAll = event => {\n    const selectedCustomers = event.target.checked\n      ? customers.map(customer => customer.id)\n      : []\n\n    setSelectedCustomers(selectedCustomers)\n  }\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id)\n    let newSelectedCustomers = []\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id)\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      )\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      )\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      )\n    }\n\n    setSelectedCustomers(newSelectedCustomers)\n  }\n\n  const handleChangePage = (event, page) => {\n    setPage(page)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value)\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0 &&\n                          selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Money spent</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Projects held</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.slice(0, rowsPerPage).map(customer => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                      selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={\n                            selectedCustomers.indexOf(customer.id) !== -1\n                          }\n                          color=\"primary\"\n                          onChange={event =>\n                            handleSelectOne(event, customer.id)\n                          }\n                          value={selectedCustomers.indexOf(customer.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatar}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.name}\n                            </Link>\n                            <div>{customer.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.location}</TableCell>\n                      <TableCell>\n                        {customer.currency}\n                        {customer.spent}\n                      </TableCell>\n                      <TableCell>{customer.type}</TableCell>\n                      <TableCell>{customer.projects}</TableCell>\n                      <TableCell>\n                        <ReviewStars value={customer.rating} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  )\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n}\n\nResults.defaultProps = {\n  customers: []\n}\n\nexport default Results\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nimport axios from 'utils/axios'\nimport { Page, SearchBar } from 'components'\nimport { Header, Results } from './components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nconst CustomerManagementList = () => {\n  const classes = useStyles()\n\n  const [customers, setCustomers] = useState([])\n\n  useEffect(() => {\n    let mounted = true\n\n    const fetchCustomers = () => {\n      axios.get('/api/management/customers').then(response => {\n        if (mounted) {\n          setCustomers(response.data.customers)\n        }\n      })\n    }\n\n    fetchCustomers()\n\n    return () => {\n      mounted = false\n    }\n  }, [])\n\n  const handleFilter = () => {}\n  const handleSearch = () => {}\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      {customers && (\n        <Results\n          className={classes.results}\n          customers={customers}\n        />\n      )}\n    </Page>\n  )\n}\n\nexport default CustomerManagementList\n","export { default } from './CustomerManagementList'\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"sourceRoot":""}