{"version":3,"sources":["views/Brokerage/BrokerageList/components/Pagination/Pagination.module.css","views/Brokerage/BrokerageList/components/Header/Header.js","views/Brokerage/BrokerageList/components/Pagination/Pagination.js","views/Brokerage/BrokerageList/components/Results/Results.js","views/Brokerage/BrokerageList/BrokerageList.js","views/Brokerage/BrokerageList/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","views/Brokerage/utils/BrokerageAPI.js","views/Brokerage/utils/index.js"],"names":["module","exports","useStyles","makeStyles","root","Header","props","className","rest","classes","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Pagination","paginationnew","page","pages","left","right","pagination","prev","Array","fill","map","x","y","no","filter","push","generate","active","dot","onClick","event","onChangePage","prevBtn","nextBtn","onNextPage","disable","onPrevPage","center","theme","content","padding","inner","minWidth","nameCell","display","textTransform","avatar","height","width","marginRight","actions","justifyContent","dangerButton","color","colors","red","borderColor","primaryButton","blue","successButton","green","Results","count","limit","brokerage","useState","selectedCustomers","setSelectedCustomers","clickActions","onUpdate","onSelect","onDelete","btnViews","update","Button","size","type","delete","btnView","length","Fragment","Card","CardHeader","action","title","Divider","CardContent","Table","TableHead","TableRow","TableCell","TableBody","hover","key","id","selected","indexOf","Link","RouterLink","to","pathUrls","users","viewPath","replace","buyer","userId","firstName","lastname","phoneNumber","hasOwnProperty","seller","view","get_absolute_url","buyerVehicle","make","category","number","year","service","schedule","jobLocation","latitide","longitude","notes","CardActions","onPageChange","onNextChange","onPrevChange","defaultProps","BrokerageList","state","regions","offset","changePageUrl","pageNo","history","url","listPage","handlePageChange","setState","handleNextPage","handlePrevPage","handleMenuSelect","user_id","console","log","loading","skelton","Skeleton","data","results","onMenuClick","handleMenuClick","this","match","params","Number","onRegionsList","nextProps","nextState","getBrokerageList","updatedState","headers","auth","PureComponent","withRouter","connect","session","authentication","withStyles","marginTop","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","value","writable","configurable","forwardRef","ref","_props$component","Component","_props$disableAnimate","disableAnimate","_props$variant","other","createElement","animate","style","backgroundColor","palette","text","marginBottom","borderRadius","shape","rect","circle","animation","opacity","name","Brokerage","config","Promise","all","axios","method","apiUrls","get","skip","then","list","Math","ceil","catch","error","response","success","options","get_by_id","getAbsoluteUrl","err"],"mappings":"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","file":"static/js/4.31aff936.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Pagination_center__3af7l\",\"pagination\":\"Pagination_pagination__2u3TS\",\"active\":\"Pagination_active__2tEZG\",\"disable\":\"Pagination_disable__35hJU\",\"dot\":\"Pagination_dot__eryjy\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/styles'\nimport { Grid, Typography, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}))\n\nconst Header = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Brokerage\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Brokerage List\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n}\n\nexport default Header\n","import React from 'react'\nimport classes from './Pagination.module.css'\n\nconst Pagination = props => {\n  const generate = (page, pages) => {\n    const delta = 2\n    const left = page - delta\n    const right = page + delta + 1\n    const pagination = []\n    let prev = null\n    Array(pages).fill(1).map((x, y) => {\n      const no = x + y\n      if (no === 1 || no === pages || (no >= left && no < right)) {\n        return no\n      } else {\n        return null\n      }\n    }).filter((item) => {\n      if (item) {\n        if (prev) {\n          if (item - prev === delta) {\n            pagination.push(prev + 1)\n          } else if (item - prev !== 1) {\n            pagination.push('...')\n          }\n        }\n        prev = item\n        pagination.push(item)\n        return item\n      }\n    })\n    return pagination\n  }\n  const paginationnew = generate(props.page, props.pages).map((item) => {\n    if (item === props.page) {\n      return <li className={classes.active}>{item}</li>\n    } else if (item === '...') {\n      return <li className={classes.dot}>{item}</li>\n    } else {\n      return <li onClick={(event) => props.onChangePage(event, item)}>{item}</li>\n    }\n  })\n\n  let prevBtn = null\n  let nextBtn = null\n\n  if (props.page < props.pages) {\n    nextBtn = (<li onClick={props.onNextPage}>&raquo;</li>)\n  } else {\n    nextBtn = (<li className={classes.disable}>&raquo;</li>)\n  }\n  if (props.page > 1) {\n    prevBtn = (<li onClick={props.onPrevPage}>&laquo;</li>)\n  } else {\n    prevBtn = (<li className={classes.disable}>&laquo;</li>)\n  }\n\n  return (\n    <div className={classes.center}>\n      <ul className={classes.pagination}>\n        {prevBtn}\n        {paginationnew}\n        {nextBtn}\n      </ul>\n    </div>\n  )\n}\n\nexport default Pagination\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport Pagination from '../Pagination';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  Button,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from 'components';\nimport { pathUrls } from 'config';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center',\n    textTransform: 'capitalize'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  },\n  dangerButton: {\n    marginRight: theme.spacing(1),\n    color: colors.red[600],\n    borderColor: colors.red[600],\n    '&:hover': {\n      borderColor: colors.red[900],\n      color: colors.red[900]\n    }\n  },\n  primaryButton: {\n    marginRight: theme.spacing(1),\n    color: colors.blue[600],\n    borderColor: colors.blue[600],\n    '&:hover': {\n      borderColor: colors.blue[900],\n      color: colors.blue[900]\n    }\n  },\n  successButton: {\n    marginRight: theme.spacing(1),\n    color: colors.green[600],\n    borderColor: colors.green[600],\n    '&:hover': {\n      borderColor: colors.green[900],\n      color: colors.green[900]\n    }\n  }\n}));\n\nconst Results = props => {\n  const { className, count, page, pages, limit, brokerage, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedCustomers = event.target.checked\n      ? brokerage.map(region => region.title)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, title) => {\n    const selectedIndex = selectedCustomers.indexOf(title);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers,\n        title\n      );\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const clickActions = {\n    onUpdate: () => {\n      props.onSelect('update', selectedCustomers[0]);\n    },\n\n    onDelete: () => {\n      props.onSelect('delete', selectedCustomers[0]);\n      setSelectedCustomers([]);\n    }\n  };\n\n  const btnViews = {\n    update: (\n      <Button\n        className={classes.primaryButton}\n        color=\"primary\"\n        onClick={clickActions.onUpdate}\n        size=\"small\"\n        type=\"submit\"\n        variant=\"outlined\"\n      >\n        Update\n      </Button>\n    ),\n    delete: (\n      <Button\n        className={classes.dangerButton}\n        color=\"primary\"\n        onClick={clickActions.onDelete}\n        size=\"small\"\n        type=\"submit\"\n        variant=\"outlined\"\n      >\n        Delete\n      </Button>\n    )\n  };\n\n  let btnView = null;\n  if (selectedCustomers.length === 1) {\n    btnView = (\n      <React.Fragment>\n        {btnViews.update}\n        {btnViews.delete}\n      </React.Fragment>\n    );\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {count} Records found. Page {props.page} of {pages}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={btnView}\n          title=\"Brokerage List\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {/*<TableCell padding=\"checkbox\">*/}\n                    {/*  <Checkbox*/}\n                    {/*    checked={selectedCustomers.length === brokerage.length}*/}\n                    {/*    color=\"primary\"*/}\n                    {/*    indeterminate={*/}\n                    {/*      selectedCustomers.length > 0 &&*/}\n                    {/*      selectedCustomers.length < brokerage.length*/}\n                    {/*    }*/}\n                    {/*    onChange={handleSelectAll}*/}\n                    {/*  />*/}\n                    {/*</TableCell>*/}\n                    <TableCell>Seller</TableCell>\n                    <TableCell>Buyer</TableCell>\n                    <TableCell>Buyer Vehicle</TableCell>\n                    <TableCell>Service</TableCell>\n                    <TableCell>Schedule</TableCell>\n                    <TableCell>Job Location</TableCell>\n                    <TableCell>Notes</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {brokerage.map(item => (\n                    <TableRow\n                      hover\n                      key={item.id}\n                      selected={selectedCustomers.indexOf(item.id) !== -1}\n                    >\n                      {/*<TableCell padding=\"checkbox\">*/}\n                      {/*  <Checkbox*/}\n                      {/*    checked={*/}\n                      {/*      selectedCustomers.indexOf(item.id) !== -1*/}\n                      {/*    }*/}\n                      {/*    color=\"primary\"*/}\n                      {/*    onChange={event =>*/}\n                      {/*      handleSelectOne(event, item.id)*/}\n                      {/*    }*/}\n                      {/*    value={selectedCustomers.indexOf(item.id) !== -1}*/}\n                      {/*  />*/}\n                      {/*</TableCell>*/}\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to={pathUrls.users.viewPath.replace(':id', item.buyer.userId)}\n                              variant=\"h6\"\n                            >\n                              {item.buyer.firstName} {item.buyer.lastname}\n                            </Link>\n                            <div>\n                              {item.buyer.phoneNumber}\n                            </div>\n                          </div>\n\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        {item.hasOwnProperty('seller') && (\n                          <div className={classes.nameCell}>\n                            <div>\n                              <Link\n                                color=\"inherit\"\n                                component={RouterLink}\n                                to={pathUrls.users.viewPath.replace(':id', item.seller.userId)}\n                                variant=\"h6\"\n                              >\n                                {item.seller.firstName} {item.seller.lastname}\n                              </Link>\n                              <div>\n                                {item.seller.phoneNumber}\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to={pathUrls.brokerage.view.get_absolute_url(item.id)}\n                              variant=\"h6\"\n                            >\n                              {item.buyerVehicle.make} {item.buyerVehicle.category}\n                            </Link>\n                            <div>\n                              {item.buyerVehicle.color} {item.buyerVehicle.number},{' '}\n                              {item.buyerVehicle.year}\n                            </div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{item.service} Km</TableCell>\n                      <TableCell>{item.schedule} Km</TableCell>\n                      <TableCell>\n                        <div>\n                          Lat: {item.jobLocation.latitide}\n                        </div>\n                        <div>\n                          Lng: {item.jobLocation.longitude}\n                        </div>\n                      </TableCell>\n                      <TableCell>{item.notes}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        {pages !== 1 && (\n          <CardActions className={classes.actions}>\n            <Pagination\n              count={count}\n              limit={limit}\n              onChangePage={props.onPageChange}\n              onNextPage={props.onNextChange}\n              onPrevPage={props.onPrevChange}\n              page={page}\n              pages={pages}\n            />\n          </CardActions>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  users: []\n};\n\nexport default Results;\n","import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/styles';\n\nimport { Page } from 'components';\nimport { Header, Results } from './components';\nimport { connect } from 'react-redux';\nimport { Skeleton } from '@material-ui/lab';\nimport { pathUrls } from '../../../config';\nimport { withRouter } from 'react-router-dom';\nimport { brokerage } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n});\n\nclass BrokerageList extends PureComponent {\n  state = {\n    regions: null,\n    page: 0,\n    offset: 0,\n    limit: 10,\n    pages: 0,\n    count: 0\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { page } = match.params;\n    const pageNo = page ? Number(page) : 1;\n    if (pageNo) {\n      let offset = (pageNo - 1) * this.state.limit;\n      this.setState({ page: pageNo, offset: offset });\n    }\n\n    if (!this.state.brokerage && pageNo === 1) {\n      this.onRegionsList(this.state);\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (\n      this.state.page !== nextState.page &&\n      this.state.offset !== nextState.offset\n    ) {\n      console.log(nextState);\n      this.onRegionsList(nextState);\n    }\n  }\n\n  onRegionsList(state) {\n    brokerage.getBrokerageList({\n      state: state,\n      setState: updatedState => this.setState(updatedState),\n      headers: this.props.auth.headers\n    });\n  }\n\n  changePageUrl = pageNo => {\n    const { history } = this.props;\n    let url = pathUrls.brokerage.listPage.get_absolute_url(pageNo);\n    history.push(url);\n  };\n\n  handlePageChange = (event, pageNo) => {\n    let offset = (pageNo - 1) * this.state.limit;\n    this.setState({ page: pageNo, offset: offset });\n    this.changePageUrl(pageNo);\n  };\n\n  handleNextPage = () => {\n    let page = this.state.page + 1;\n    let offset = (page - 1) * this.state.limit;\n    this.setState({ page: page, offset: offset });\n    this.changePageUrl(page);\n  };\n\n  handlePrevPage = () => {\n    let page = this.state.page - 1;\n    let offset = (page - 1) * this.state.limit;\n    this.setState({ page: page, offset: offset });\n    this.changePageUrl(page);\n  };\n\n  handleMenuSelect = (type, user_id) => {\n    const { history } = this.props;\n    if (type === 'delete') {\n      // regions.deleteRegion({\n      //   state: this.state,\n      //   setState: updatedState => this.setState(updatedState),\n      //   headers: this.props.auth.headers,\n      //   id: user_id\n      // });\n      console.log('Deleted', user_id);\n    } else if (type === 'update') {\n      history.push(pathUrls.brokerage.update.get_absolute_url(user_id));\n    }\n  };\n\n  loading = () => {\n    let skelton = [];\n    skelton.push(<Skeleton\n      variant=\"text\"\n      width={150}\n                 />);\n    let data = Array(this.state.limit)\n      .fill(1)\n      .map(item => {\n        return <Skeleton\n          height={50}\n          variant=\"text\"\n        />;\n      });\n    return [...skelton, ...data];\n  };\n\n  results = () => {\n    const { classes } = this.props;\n    if (this.state.brokerage) {\n      return (\n        <div>\n          <Results\n            brokerage={this.state.brokerage}\n            className={classes.results}\n            count={this.state.count}\n            limit={this.state.limit}\n            onMenuClick={this.handleMenuClick}\n            onNextChange={this.handleNextPage}\n            onPageChange={this.handlePageChange}\n            onPrevChange={this.handlePrevPage}\n            onSelect={this.handleMenuSelect}\n            page={this.state.page}\n            pages={this.state.pages}\n          />\n        </div>\n      );\n    } else {\n      return this.loading();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Page\n        className={classes.root}\n        title=\"Brokerage List\"\n      >\n        <Header />\n        {this.results()}\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.session.authentication\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps)(withStyles(styles)(BrokerageList))\n);\n","export { default } from './BrokerageList';\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      backgroundColor: theme.palette.action.hover,\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: '0.8em',\n      marginBottom: '0.8em',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `disabledAnimate={false}`. */\n    animate: {\n      animation: '$animate 1.5s ease-in-out infinite'\n    },\n    '@keyframes animate': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    }\n  };\n};\nvar Skeleton = React.forwardRef(function Skeleton(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableAnimate = props.disableAnimate,\n      disableAnimate = _props$disableAnimate === void 0 ? false : _props$disableAnimate,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableAnimate\", \"height\", \"variant\", \"width\"]);\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, !disableAnimate && classes.animate)\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true` the animation effect is disabled.\n   */\n  disableAnimate: PropTypes.bool,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import { axios, apiUrls } from 'config';\n\nexport class Brokerage {\n  static getBrokerageList(config){\n    console.log(config)\n    const { state, setState, headers } = config;\n    Promise.all([\n      axios({\n        method: apiUrls.brokerage.count.method,\n        url: apiUrls.brokerage.count.url,\n        headers: headers\n      }),\n      axios({\n        method: apiUrls.brokerage.get.method,\n        url: apiUrls.brokerage.get.url,\n        params: {\n          offset: state.offset,\n          limit: state.limit,\n          skip: state.offset\n        },\n        headers: {\n          ...headers\n        }\n      })\n    ])\n      .then(([count, list]) => {\n        setState({\n          count: count.data.count,\n          brokerage: list.data,\n          pages: Math.ceil(count.data.count / state.limit)\n        });\n        console.log(count.data.count, list.data);\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  }\n\n  static getBrokerage(config){\n    const { id, headers, success, error } = config;\n    const options = {\n      method: apiUrls.brokerage.get_by_id.method,\n      url: apiUrls.brokerage.get_by_id.getAbsoluteUrl(id),\n      headers: headers\n    };\n    axios(options)\n      .then(response => {\n        console.log('Success', response.data);\n        success(response.data);\n      })\n      .catch(err => {\n        error(err);\n        console.log('Error', err.response, err);\n      });\n  }\n}\n","export { Brokerage as brokerage } from './BrokerageAPI'\n"],"sourceRoot":""}