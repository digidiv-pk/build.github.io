{"version":3,"sources":["views/Auth/ResetPassword/components/ResetPasswordForm/ResetPasswordForm.js","views/Auth/ResetPassword/ResetPassword.js","views/Auth/ResetPassword/index.js","../node_modules/@material-ui/icons/Lock.js"],"names":["useStyles","makeStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","marginTop","width","error","backgroundColor","palette","dark","connect","state","authentication","session","props","className","rest","variant","classes","useState","request","requestInitiated","message","confirm","passwordReset","response","responseMessage","responseType","resendOTP","resent","progress","initiated","finalize","values","formState","setFormState","handleChange","event","persist","target","name","value","sendRequest","options","method","apiUrls","admin","resetPassword","url","data","phoneNumber","headers","axios","then","console","log","catch","err","confirmReset","passCode","newPassword","formFields","Fragment","TextField","autoComplete","disabled","fullWidth","InputProps","endAdornment","Button","color","onClick","size","type","label","onChange","reTypePassword","responseDisplay","Alert","setTimeout","progressBar","LinearProgress","rediectLogin","to","pathUrls","auth","login","clsx","onSubmit","preventDefault","align","Link","component","RouterLink","underline","height","alignItems","justifyContent","padding","card","breakpoints","sm","maxWidth","overflow","position","flexBasis","content","media","borderTopRightRadius","borderBottomRightRadius","white","flexDirection","down","icon","backgroundImage","gradients","green","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","ResetPassword","title","Card","CardContent","Typography","gutterBottom","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement","d"],"mappings":"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","file":"static/js/32.9d6ae218.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { Link as RouterLink, Redirect } from 'react-router-dom'\nimport { pathUrls, apiUrls, axios } from '../../../../../config'\nimport { makeStyles } from '@material-ui/styles'\nimport { Button, TextField, LinearProgress, Link } from '@material-ui/core'\nimport Alert from 'components/Alert'\nimport * as actions from '../../../../../actions'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}))\n\nconst ResetPasswordForm = props => {\n  const { className, variant, ...rest } = props\n  const classes = useStyles()\n  const [formState, setFormState] = useState({\n    request: {\n      requestInitiated: false,\n      message: null\n    },\n    confirm: {\n      passwordReset: false,\n      message: null\n    },\n    response: {\n      responseMessage: null,\n      responseType: null\n    },\n    resendOTP: {\n      resent: false,\n      progress: false\n    },\n    initiated: false,\n    finalize: false,\n    values: {}\n  })\n\n  const handleChange = event => {\n    event.persist()\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      }\n    }))\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (!formState.request.requestInitiated) {\n      sendRequest()\n    } else {\n      confirmReset()\n    }\n  }\n  const sendRequest = () => {\n    setFormState(formState => ({\n      ...formState,\n      initiated: true\n    }))\n    const options = {\n      method: apiUrls.admin.resetPassword.request.method,\n      url: apiUrls.admin.resetPassword.request.url,\n      data: {\n        phoneNumber: formState.values.phoneNumber\n      },\n      headers: props.authentication.headers\n    }\n    axios(options).then(response => {\n      console.log(response.data)\n      setFormState(formState => ({\n        ...formState,\n        request: {\n          ...response.data\n        },\n        response: {\n          responseMessage: response.data.message,\n          responseType: 'success'\n        },\n        initiated: false\n      }))\n    }).catch(err => {\n      console.log(err.response)\n      setFormState(formState => ({\n        ...formState,\n        response: {\n          responseMessage: 'Invalid Contact Number',\n          responseType: 'error'\n        },\n        initiated: false\n      }))\n    })\n  }\n\n  const confirmReset = () => {\n    setFormState(formState => ({\n      ...formState,\n      initiated: true\n    }))\n    const options = {\n      method: apiUrls.admin.resetPassword.confirm.method,\n      url: apiUrls.admin.resetPassword.confirm.url,\n      data: {\n        phoneNumber: formState.values.phoneNumber,\n        passCode: formState.values.passCode,\n        newPassword: formState.values.newPassword\n      },\n      headers: props.authentication.headers\n    }\n    axios(options).then(response => {\n      setFormState(formState => ({\n        ...formState,\n        confirm: {\n          ...response.data\n        },\n        response: {\n          responseMessage: response.data.message,\n          responseType: 'success'\n        },\n        initiated: false,\n        finalize: true\n      }))\n    }).catch(err => {\n      setFormState(formState => ({\n        ...formState,\n        response: {\n          responseMessage: 'Invalid Contact Number',\n          responseType: 'error'\n        },\n        initiated: false\n      }))\n    })\n  }\n  let formFields = null\n  if (formState.request.requestInitiated) {\n    formFields = (\n      <React.Fragment>\n        <TextField\n          autoComplete=\"off\"\n          disabled\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <Button\n                color=\"secondary\"\n                disabled={formState.initiated}\n                onClick={sendRequest}\n                size=\"small\"\n                type=\"submit\"\n                type=\"button\"\n                variant=\"outlined\"\n              >\n                Resend\n              </Button>\n            )\n          }}\n          label=\"Phone Number\"\n          name=\"phoneNumber\"\n          onChange={handleChange}\n          value={formState.values.phoneNumber || ''}\n          variant=\"outlined\"\n        />\n        <TextField\n          autoComplete=\"off\"\n          fullWidth\n          label=\"OTP\"\n          name=\"passCode\"\n          onChange={handleChange}\n          type=\"text\"\n          value={formState.values.passCode || ''}\n          variant=\"outlined\"\n        />\n        <TextField\n          autoComplete=\"off\"\n          fullWidth\n          label=\"New Password\"\n          name=\"newPassword\"\n          onChange={handleChange}\n          type=\"password\"\n          value={formState.values.newPassword || ''}\n          variant=\"outlined\"\n        />\n        <TextField\n          autoComplete=\"off\"\n          fullWidth\n          label=\"ReType Password\"\n          name=\"reTypePassword\"\n          onChange={handleChange}\n          type=\"password\"\n          value={formState.values.reTypePassword || ''}\n          variant=\"outlined\"\n        />\n      </React.Fragment>\n    )\n  } else {\n    formFields = (\n      <TextField\n        autoComplete=\"off\"\n        fullWidth\n        label=\"Phone Number\"\n        name=\"phoneNumber\"\n        onChange={handleChange}\n        value={formState.values.phoneNumber || ''}\n        variant=\"outlined\"\n      />\n    )\n  }\n\n  let responseDisplay = null\n  if (formState.response.responseMessage) {\n    responseDisplay = (\n      <Alert\n        message={formState.response.responseMessage}\n        variant={formState.response.responseType}\n      />\n    )\n    setTimeout(() => {\n      setFormState(formState => ({\n        ...formState,\n        response: {\n          responseMessage: null,\n          responseType: null\n        }\n      }))\n    }, 3000)\n  }\n\n  let progressBar = null\n  if (formState.initiated && !formState.response.responseMessage) {\n    progressBar = (\n      <LinearProgress />\n    )\n  }\n  let rediectLogin = null\n  if (formState.finalize) {\n    rediectLogin = (\n      <Redirect to={pathUrls.auth.login} />\n    )\n  }\n  return (\n    <div>\n      {rediectLogin}\n      {responseDisplay}\n      <form\n        method=\"post\"\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n\n        <div className={classes.fields}>\n          {formFields}\n\n        </div>\n        {progressBar}\n        <div align=\"right\">\n          <Link\n            color=\"secondary\"\n            component={RouterLink}\n            to={pathUrls.auth.login}\n            underline=\"always\"\n            variant=\"subtitle2\"\n          >\n            Sign In\n          </Link>\n        </div>\n        <Button\n          className={classes.submitButton}\n          color=\"secondary\"\n          disabled={formState.initiated}\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Reset\n        </Button>\n\n      </form>\n    </div>\n  )\n}\n\nResetPasswordForm.propTypes = {\n  className: PropTypes.string\n}\n\nconst mapStateToProps = state => {\n  return {\n    authentication: state.session.authentication\n  }\n}\n\nexport default connect(mapStateToProps)(ResetPasswordForm)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport {\n  Card,\n  CardContent,\n  Typography\n} from '@material-ui/core'\nimport LockIcon from '@material-ui/icons/Lock'\n\nimport { Page } from 'components'\nimport gradients from 'utils/gradients'\nimport { ResetPasswordForm } from './components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(6, 2)\n  },\n  card: {\n    width: theme.breakpoints.values.sm,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 3, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    padding: theme.spacing(3),\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    marginTop: theme.spacing(2),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}))\n\nconst ResetPassword = () => {\n  const classes = useStyles()\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Reset Password\"\n    >\n      <Card className={classes.card}>\n        <CardContent className={classes.content}>\n          <LockIcon className={classes.icon} />\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Reset Password\n          </Typography>\n          <ResetPasswordForm className={classes.loginForm} />\n        </CardContent>\n      </Card>\n    </Page>\n  )\n}\n\nexport default ResetPassword\n","export { default } from './ResetPassword'\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');\n\nexports.default = _default;"],"sourceRoot":""}