{"version":3,"sources":["templates/GoogleMap/CircleMap/components/General/components/UserCreateForm/UserForm/UserForm.js","templates/GoogleMap/CircleMap/components/General/components/UserCreateForm/SellerInfoForm/SellerInfoForm.js","templates/GoogleMap/CircleMap/components/General/components/UserCreateForm/SellerBankingForm/SellerBankingForm.js","templates/GoogleMap/CircleMap/components/General/components/UserCreateForm/UserCreateForm.js","templates/GoogleMap/CircleMap/components/General/General.js","templates/GoogleMap/CircleMap/components/Header/Header.js","templates/GoogleMap/CircleMap/components/Map/Map.js","templates/GoogleMap/CircleMap/CircleMap.js","templates/GoogleMap/CircleMap/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"],"names":["UserForm","props","hasError","key","conflicts","getErrorMessage","Fragment","CardHeader","title","CardContent","Grid","container","spacing","item","md","xs","TextField","disabled","loading","error","fullWidth","helperText","label","name","onChange","handleChange","required","value","values","firstName","variant","lastName","type","email","phoneNumber","password","FormControl","component","FormLabel","RadioGroup","aria-label","row","role","FormControlLabel","control","Radio","color","labelPlacement","SellerInfoForm","sellerInfoFormFields","address_details","fields","locality","grid","input","placeholder","streetAddress","town","state","country","options","postalCode","OrdDetails","OrgName","EmployeeId","logo","legal_details","dotNumber","proLicence","insurancepolicy","region","SSN","DOB","Object","keys","map","sectionKey","section","Divider","fieldKey","formValues","field","select","SelectProps","native","option","SellerBankingForm","sellerBankingDetailsFormFields","bankName","accountTitle","accountNumber","routingNumber","useStyles","makeStyles","theme","root","saveButton","palette","white","backgroundColor","colors","green","connect","response","users","create","dispatch","onCreateUser","data","actions","className","rest","classes","useState","setValues","event","persist","target","checked","getValue","button","LinearProgress","Button","responseMessage","Alert","message","errorMessage","success","successMessage","sellerInfoForm","Card","clsx","onSubmit","preventDefault","sellerInfo","sellerBankingDetails","CardActions","Header","Typography","gutterBottom","description","Map","googleMapRef","React","createRef","marker","circle","createGoogleMap","window","google","maps","current","zoom","center","lat","lng","disableDefaultUI","addListener","latLng","setMap","setPosition","createCircle","setState","createMarker","icon","path","SymbolPath","FORWARD_CLOSED_ARROW","scale","fillColor","fillOpacity","strokeWeight","anchor","Point","rotation","Marker","position","googleMap","Circle","strokeColor","strokeOpacity","getPosition","radius","googleMapScript","document","createElement","src","this","apiKey","body","appendChild","addEventListener","styles","width","height","id","ref","style","Component","breakpoints","lg","maxWidth","margin","padding","divider","grey","content","marginTop","CircleMap","creds","GOOGLE_MAP_API","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","writable","configurable"],"mappings":"2UAkLeA,EArKE,SAACC,GAChB,IAAMC,EAAW,SAACC,GAChB,QAAIF,EAAMG,aACJH,EAAMG,UAAUD,IASlBE,EAAkB,SAACF,GACvB,OAAIF,EAAMG,WACJH,EAAMG,UAAUD,GACXF,EAAMG,UAAUD,GAKlB,IAGX,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAClB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,GAET,kBAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBC,MAAOjB,EAAS,aAChBkB,WAAS,EACTC,WAAYhB,EAAgB,aAC5BiB,MAAM,aACNC,KAAK,YACLC,SAAUvB,EAAMwB,aAChBC,UAAQ,EACRC,MAAO1B,EAAM2B,OAAOC,UACpBC,QAAQ,cAGZ,kBAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBC,MAAOjB,EAAS,YAChBkB,WAAS,EACTC,WAAYhB,EAAgB,YAC5BiB,MAAM,YACNC,KAAK,WACLC,SAAUvB,EAAMwB,aAChBC,UAAQ,EACRC,MAAO1B,EAAM2B,OAAOG,SACpBD,QAAQ,cAGZ,kBAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBC,MAAOjB,EAAS,SAChBkB,WAAS,EACTC,WAAYhB,EAAgB,SAC5BiB,MAAM,gBACNC,KAAK,QACLC,SAAUvB,EAAMwB,aAChBC,UAAQ,EACRM,KAAK,QACLL,MAAO1B,EAAM2B,OAAOK,MACpBH,QAAQ,cAGZ,kBAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBC,MAAOjB,EAAS,eAChBkB,WAAS,EACTC,WAAYhB,EAAgB,eAC5BiB,MAAM,eACNC,KAAK,cACLC,SAAUvB,EAAMwB,aAChBC,UAAQ,EACRM,KAAK,OACLL,MAAO1B,EAAM2B,OAAOM,YACpBJ,QAAQ,cAGZ,kBAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBE,WAAS,EACTE,MAAM,WACNC,KAAK,WACLC,SAAUvB,EAAMwB,aAChBC,UAAQ,EACRM,KAAK,WACLL,MAAO1B,EAAM2B,OAAOO,SACpBL,QAAQ,cAGZ,kBAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,IAEJ,kBAACqB,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,oBACA,kBAACE,EAAA,EAAD,CACEC,aAAW,OACXjB,KAAK,OACLC,SAAUvB,EAAMwB,aAChBgB,KAAG,EACHd,MAAO1B,EAAM2B,OAAOc,MAEpB,kBAACC,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CACPC,MAAM,UACNpB,UAAQ,IAEVT,SAAUhB,EAAMiB,QAChBI,MAAM,QACNyB,eAAe,MACfpB,MAAM,UAER,kBAACgB,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CACPC,MAAM,UACNpB,UAAQ,IAEVT,SAAUhB,EAAMiB,QAChBI,MAAM,SACNyB,eAAe,MACfpB,MAAM,kBCyJTqB,G,KAtTQ,SAAC/C,GACtB,IAAMgD,EAAuB,CAC3BC,gBAAiB,CACf3B,KAAM,kBACN4B,OAAQ,CACNC,SAAU,CACRC,KAAM,CACJvC,GAAI,GACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,WACbhC,KAAM,aAIViC,cAAe,CACbH,KAAM,CACJvC,GAAI,GACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,iBACbhC,KAAM,kBAIVkC,KAAM,CACJJ,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,OACbhC,KAAM,SAGVmC,MAAO,CACLL,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,QACbhC,KAAM,UAGVoC,QAAS,CACPN,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,SACNuB,YAAa,UACbhC,KAAM,UACNqC,QAAS,CACP,CACEzD,IAAK,MACLwB,MAAO,eAKfkC,WAAY,CACVR,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,cACbhC,KAAM,iBAKduC,WAAY,CACVvC,KAAM,uBACN4B,OAAQ,CACNY,QAAS,CACPV,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,oBACbhC,KAAM,YAGVyC,WAAY,CACVX,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,cACbhC,KAAM,eAGV0C,KAAM,CACJZ,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,OACbhC,KAAM,WAKd2C,cAAe,CACb3C,KAAM,gBACN4B,OAAQ,CACNgB,UAAW,CACTd,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,aACbhC,KAAM,cAGV6C,WAAY,CACVf,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,uBACbhC,KAAM,eAGV8C,gBAAiB,CACfhB,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,mBACbhC,KAAM,oBAGV+C,OAAQ,CACNjB,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,SACbhC,KAAM,WAGVgD,IAAK,CACHlB,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,MACbhC,KAAM,QAGViD,IAAK,CACHnB,KAAM,CACJvC,GAAI,EACJC,GAAI,IAENuC,MAAO,CACLtB,KAAM,OACNuB,YAAa,gBACbhC,KAAM,WAiGhB,OACE,kBAAC,IAAMjB,SAAP,KACGmE,OAAOC,KAAKzB,GAAsB0B,KAAI,SAAAC,GACrC,IAAMC,EAAU5B,EAAqB2B,GAC/BzB,EAAS0B,EAAQ1B,OACjB5B,EAAOsD,EAAQtD,KACrB,OACE,kBAAC,IAAMjB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAOe,IACnB,kBAACuD,EAAA,EAAD,MACA,kBAACrE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,GAER6D,OAAOC,KAAKvB,GAAQwB,KAAI,SAAAI,GACvB,IA1GO1B,EAAM2B,EAAY1B,EA0GnB2B,EAAQ9B,EAAO4B,GACrB,OA3GO1B,EA2Gc4B,EAAM5B,KA3Gd2B,EA2GoB/E,EAAM2B,OA1GlC,UADoB0B,EA2GsB2B,EAAM3B,OA1GzDtB,KAEN,kBAACtB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAIuC,EAAKvC,GACTC,GAAIsC,EAAKtC,IAET,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBE,WAAS,EACTE,MAAOgC,EAAMC,YACbhC,KAAM+B,EAAM/B,KACZC,SAAUvB,EAAMwB,aAChBO,KAAMsB,EAAMtB,KACZL,MAAOqD,EAAW1B,EAAM/B,MACxBO,QAAQ,cAIU,SAAfwB,EAAMtB,KAEb,kBAACtB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAIuC,EAAKvC,GACTC,GAAIsC,EAAKtC,IAET,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBE,WAAS,EACTE,MAAOgC,EAAMC,YACbhC,KAAM+B,EAAM/B,KACZC,SAAUvB,EAAMwB,aAChBO,KAAMsB,EAAMtB,KACZL,MAAOqD,EAAW1B,EAAM/B,MACxBO,QAAQ,cAIU,WAAfwB,EAAMtB,KAEb,kBAACtB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAIuC,EAAKvC,GACTC,GAAIsC,EAAKtC,IAET,kBAACC,EAAA,EAAD,CACEI,WAAS,EACTE,MAAOgC,EAAMC,YACbhC,KAAM+B,EAAM/B,KACZC,SAAUvB,EAAMwB,aAChByD,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvBzD,MAAOqD,EAAW1B,EAAM/B,OAAS+B,EAAMM,QAAQ,GAC/C9B,QAAQ,YAEPwB,EAAMM,QAAQe,KAAI,SAAAU,GAAM,OACvB,4BACElF,IAAKkF,EAAOlF,IACZwB,MAAO0D,EAAOlF,KAEbkF,EAAO1D,YAMM,SAAf2B,EAAMtB,KAEb,kBAACtB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAIuC,EAAKvC,GACTC,GAAIsC,EAAKtC,IAET,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBE,WAAS,EACTE,MAAOgC,EAAMC,YACbhC,KAAM+B,EAAM/B,KACZC,SAAUvB,EAAMwB,aAChBO,KAAMsB,EAAMtB,KACZL,MAAOqD,EAAW1B,EAAM/B,MACxBO,QAAQ,mBAfT,cC9MIwD,EA7DW,SAACrF,GACzB,IAAMsF,EAAiC,CACrCC,SAAU,CACRxD,KAAM,OACNuB,YAAa,YACbhC,KAAM,YAERkE,aAAc,CACZzD,KAAM,OACNuB,YAAa,gBACbhC,KAAM,gBAERmE,cAAe,CACb1D,KAAM,OACNuB,YAAa,iBACbhC,KAAM,iBAERoE,cAAe,CACb3D,KAAM,OACNuB,YAAa,iBACbhC,KAAM,kBAIV,OACE,kBAAC,IAAMjB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,oBAClB,kBAACsE,EAAA,EAAD,MACA,kBAACrE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,GAER6D,OAAOC,KAAKa,GAAgCZ,KAAI,SAAAI,GAC/C,IAAME,EAAQM,EAA+BR,GAC7C,OACE,kBAACrE,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,SAAUhB,EAAMiB,QAChBE,WAAS,EACTE,MAAO2D,EAAM1B,YACbhC,KAAM0D,EAAM1D,KACZC,SAAUvB,EAAMwB,aAChBO,KAAMiD,EAAMjD,KACZL,MAAO1B,EAAM2B,OAAOqD,EAAM1D,MAC1BO,QAAQ,qB,klBCjC1B,IAAM8D,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACNC,WAAY,CACVlD,MAAOgD,EAAMG,QAAQC,MACrBC,gBAAiBC,IAAOC,MAAM,KAC9B,UAAW,CACTF,gBAAiBC,IAAOC,MAAM,W,GA0KrBC,aAXS,SAAA5C,GACtB,MAAO,CACL6C,SAAU7C,EAAM8C,MAAMC,WAIC,SAAAC,GACzB,MAAO,CACLC,aAAc,SAACC,GAAD,OAAUF,EAASG,IAAmBD,QAGzCN,EArKQ,SAAArG,GAAU,IACvB6G,EAAuB7G,EAAvB6G,UAAcC,EADQ,YACC9G,EADD,eAGxB+G,EAAUpB,IAHc,EAIFqB,mBAAS,IAJP,mBAIvBrF,EAJuB,KAIfsF,EAJe,KAQxBzF,EAAe,SAAA0F,GACnBA,EAAMC,UAENF,EAAU,EAAD,GACJtF,EADI,eAENuF,EAAME,OAAO9F,KACU,aAAtB4F,EAAME,OAAOrF,KACTmF,EAAME,OAAOC,QACbH,EAAME,OAAO1F,UAGjB4F,EAAW,SAACpH,GAChB,OAAIyB,EAAOzB,GACFyB,EAAOzB,GAEP,IAgDPe,EAAU,KACVsG,EAAS,KACTvH,EAAMsG,SAASrF,QACjBA,EACE,6BACE,kBAACuG,EAAA,EAAD,MACA,8BAIJD,EACE,kBAACE,EAAA,EAAD,CACEZ,UAAWE,EAAQhB,WACnBhE,KAAK,SACLF,QAAQ,aAHV,eASJ,IAAI6F,EAAkB,KAClB1H,EAAMsG,SAASpF,MACjBwG,EACE,kBAACC,EAAA,EAAD,CACEC,QAAS5H,EAAMsG,SAASuB,aACxBhG,QAAQ,UAGH7B,EAAMsG,SAASwB,UACxBJ,EACE,kBAACC,EAAA,EAAD,CACEC,QAAS5H,EAAMsG,SAASyB,eACxBlG,QAAQ,aAId,IAAImG,EAAiB,KAmBrB,MAlBoB,WAAhBrG,EAAOc,OACTuF,EACE,kBAAC,IAAM3H,SAAP,KACE,kBAAC,EAAD,CACEF,UAAWH,EAAMsG,SAASnG,UAC1BqB,aAAcA,EACdP,QAASjB,EAAMsG,SAASrF,QACxBU,OAAQA,IAEV,kBAAC,EAAD,CACExB,UAAWH,EAAMsG,SAASnG,UAC1BqB,aAAcA,EACdP,QAASjB,EAAMsG,SAASrF,QACxBU,OAAQA,MAMd,kBAACsG,EAAA,EAAD,iBACMnB,EADN,CAEED,UAAWqB,YAAKnB,EAAQjB,KAAMe,KAE7Ba,EACD,0BAAMS,SA1GW,SAAAjB,GACnBA,EAAMkB,iBACN,IAAIzB,EAAO,CACT1E,YAAaqF,EAAS,eACtBtF,MAAOsF,EAAS,SAChBpF,SAAUoF,EAAS,YACnB1F,UAAW0F,EAAS,aACpBxF,SAAUwF,EAAS,YACnB7E,KAAM,CACJ6E,EAAS,UAIPe,EAAa,CACjBlF,SAAUmE,EAAS,YACnBxD,QAASwD,EAAS,WAClBvD,WAAYuD,EAAS,cACrB1D,WAAY0D,EAAS,cACrB9D,KAAM8D,EAAS,QACf5D,QAAS4D,EAAS,WAClBpD,UAAWoD,EAAS,aACpBnD,WAAYmD,EAAS,cACrBlD,gBAAiBkD,EAAS,mBAC1BtD,KAAMsD,EAAS,QACfjD,OAAQiD,EAAS,UACjB/D,cAAe+D,EAAS,iBACxBhD,IAAKgD,EAAS,OACd/C,IAAK+C,EAAS,OACdgB,qBAAsB,CACpB9C,aAAc8B,EAAS,gBACvB/B,SAAU+B,EAAS,YACnB7B,cAAe6B,EAAS,iBACxB5B,cAAe4B,EAAS,mBAGR,WAAhB3F,EAAOc,OACTkE,EAAI,KACCA,EADD,CAEF0B,WAAW,EAAD,GACLA,MAITrI,EAAM0G,aAAaC,KAgEd1F,EACD,kBAAC,EAAD,CACEd,UAAWH,EAAMsG,SAASnG,UAC1BqB,aAAcA,EACdP,QAASjB,EAAMsG,SAASrF,QACxBU,OAAQA,IAETqG,EACD,kBAACnD,EAAA,EAAD,MACA,kBAAC0D,EAAA,EAAD,KACGhB,QCtKO3B,aAAW,iBAAO,CAClCE,KAAM,O,OCFFH,EAAYC,aAAW,iBAAO,CAClCE,KAAM,OAkCO0C,EA/BA,SAAAxI,GAAU,IACf6G,EAAuB7G,EAAvB6G,UAAcC,EADA,YACS9G,EADT,eAGhB+G,EAAUpB,IAEhB,OACE,yCACMmB,EADN,CAEED,UAAWqB,YAAKnB,EAAQjB,KAAMe,KAE9B,kBAAC4B,EAAA,EAAD,CACErG,UAAU,KACVsG,cAAY,EACZ7G,QAAQ,YAEP7B,EAAMO,OAET,kBAACkI,EAAA,EAAD,CACErG,UAAU,KACVP,QAAQ,MAEP7B,EAAM2I,e,6CCwEAC,E,2MApGbC,aAAeC,IAAMC,Y,EACrBtF,MAAQ,CACNuF,OAAQ,KACRC,OAAO,M,EAkBTC,gBAAkB,WAChB,IAAMxE,EAAM,IAAIyE,OAAOC,OAAOC,KAAKT,IAAI,EAAKC,aAAaS,QAAS,CAChEC,KAAM,GACNC,OAAQ,CACNC,IAAK,UACLC,KAAM,WAERC,kBAAkB,IAuBpB,OArBAjF,EAAIkF,YAAY,SAAS,SAAC1C,GACxB,IAAI2C,EAAS3C,EAAM2C,OACnB,GAAI,EAAKpG,MAAMuF,OAOV,CACH,IAAIA,EAAS,EAAKvF,MAAMuF,OACpBC,EAAS,EAAKxF,MAAMwF,OACxBA,EAAOa,OAAO,MACdd,EAAOe,YAAaF,GACpBZ,EAAS,EAAKe,aAAahB,GAC3B,EAAKiB,SAAS,CACZjB,OAAQA,EACRC,OAAQA,QAfU,CACpB,IAAID,EAAS,EAAKkB,aAAaL,GAC3BZ,EAAS,EAAKe,aAAahB,GAC/B,EAAKiB,SAAS,CACZjB,OAAQA,EACRC,OAAQA,QAcPvE,G,EAGTwF,aAAe,WAAiD,IAAhDL,EAA+C,uDAAxC,CAAEJ,IAAK,UAAWC,KAAM,WACzCS,EAAO,CACTC,KAAMjB,OAAOC,OAAOC,KAAKgB,WAAWC,qBACpCC,MAAO,EACPC,UAAW,UACXC,YAAa,EACbC,aAAc,EACdC,OAAQ,IAAIxB,OAAOC,OAAOC,KAAKuB,MAAM,EAAG,GACxCC,SAAW,GAEb,OAAO,IAAI1B,OAAOC,OAAOC,KAAKyB,OAAO,CACnCC,SAAUlB,EACVnF,IAAK,EAAKsG,UACVb,KAAMA,K,EAIVH,aAAe,WAAuB,IAAtBhB,EAAqB,uDAAd,EAAKA,OAC1B,OAAO,IAAIG,OAAOC,OAAOC,KAAK4B,OAAO,CACnCC,YAAa,UACbC,cAAe,GACfT,aAAc,EACdF,UAAW,UACXC,YAAa,IACb/F,IAAK,EAAKsG,UACVxB,OAAQR,EAAOoC,cACfC,OAAQ,O,mFA1ES,IAAD,OACZC,EAAkBC,SAASC,cAAc,UAC/CF,EAAgBG,IAAhB,sDAAqEC,KAAK1L,MAAM2L,OAAhF,qBACAJ,SAASK,KAAKC,YAAYP,GAE1BA,EAAgBQ,iBAAiB,QAAQ,WACvC,EAAKd,UAAY,EAAK9B,kBAGtB,EAAKe,SAAS,CAACjB,OAAQ,EAAKA,c,+BAuE9B,IAAM+C,EAAS,CACbC,MAAON,KAAK1L,MAAMgM,MAClBC,OAAQP,KAAK1L,MAAMiM,QAErB,OACE,yBACEC,GAAG,aACHC,IAAKT,KAAK7C,aACVuD,MAAOL,Q,GA/FGM,aCcZ1G,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkG,MAAOnG,EAAMyG,YAAY3K,OAAO4K,GAChCC,SAAU,OACVC,OAAQ,SACRC,QAAS7G,EAAMlF,QAAQ,IAEzBgM,QAAS,CACPzG,gBAAiBC,IAAOyG,KAAK,MAE/BC,QAAS,CACPC,UAAWjH,EAAMlF,QAAQ,QAuCdoM,EAnCG,SAAA/M,GAChB,IAAM+G,EAAUpB,IAEhB,OACE,kBAAC,IAAD,CACEkB,UAAWE,EAAQjB,KACnBvF,MAAM,YAEN,kBAAC,EAAD,CACEoI,YAAY,6BACZpI,MAAM,UAER,kBAACsE,EAAA,EAAD,CAASgC,UAAWE,EAAQ4F,UAC5B,yBAAK9F,UAAWE,EAAQ8F,SACtB,kBAAC5E,EAAA,EAAD,KACE,kBAAC3H,EAAA,EAAD,CAAYC,MAAM,eAClB,kBAAC,EAAD,CACEoL,OAAQqB,IAAMC,eACdhB,OAAQ,IACRD,MAAM,SAER,kBAACnH,EAAA,EAAD,MACA,kBAAC0D,EAAA,EAAD,UCrDV,yC,iCCAe,SAAS2E,EAAgBC,GAItC,OAHAD,EAAkB1I,OAAO4I,eAAiB5I,OAAO6I,eAAiB,SAAyBF,GACzF,OAAOA,EAAEG,WAAa9I,OAAO6I,eAAeF,KAEvBA,GAJzB,mC,iCCAA,SAASI,EAASC,GAA4T,OAA1OD,EAArD,oBAAXE,QAAoD,kBAApBA,OAAOC,SAAoC,SAAkBF,GAAO,cAAcA,GAA4B,SAAkBA,GAAO,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAA0BA,GAE/U,SAASK,EAAQL,GAW9B,OATEK,EADoB,oBAAXJ,QAAuD,WAA9BF,EAASE,OAAOC,UACxC,SAAiBF,GACzB,OAAOD,EAASC,IAGR,SAAiBA,GACzB,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,SAAWL,EAASC,KAIhHA,GCXF,SAASM,EAA2BC,EAAMC,GACvD,OAAIA,GAA2B,WAAlBH,EAAQG,IAAsC,oBAATA,ECHrC,SAAgCD,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIE,eAAe,6DAG3B,OAAOF,EDEA,CAAsBA,GAHpBC,EAJX,mC,iCEAe,SAASE,EAAgBf,EAAGgB,GAMzC,OALAD,EAAkB1J,OAAO4I,gBAAkB,SAAyBD,EAAGgB,GAErE,OADAhB,EAAEG,UAAYa,EACPhB,IAGcA,EAAGgB,GCLb,SAASC,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAAST,UAAYpJ,OAAOgC,OAAO8H,GAAcA,EAAWV,UAAW,CACrED,YAAa,CACXjM,MAAO2M,EACPG,UAAU,EACVC,cAAc,KAGdH,GAAY,EAAeD,EAAUC,GAb3C","file":"static/js/27.2b567fae.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField\n} from '@material-ui/core'\n\nconst UserForm = (props) => {\n  const hasError = (key) => {\n    if (props.conflicts) {\n      if (props.conflicts[key]) {\n        return true\n      } else {\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n  const getErrorMessage = (key) => {\n    if (props.conflicts) {\n      if (props.conflicts[key]) {\n        return props.conflicts[key]\n      } else {\n        return ''\n      }\n    } else {\n      return ''\n    }\n  }\n  return (\n    <React.Fragment>\n      <CardHeader title=\"Create User\" />\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <TextField\n              disabled={props.loading}\n              error={hasError('firstName')}\n              fullWidth\n              helperText={getErrorMessage('firstName')}\n              label=\"First name\"\n              name=\"firstName\"\n              onChange={props.handleChange}\n              required\n              value={props.values.firstName}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <TextField\n              disabled={props.loading}\n              error={hasError('lastName')}\n              fullWidth\n              helperText={getErrorMessage('lastName')}\n              label=\"Last name\"\n              name=\"lastName\"\n              onChange={props.handleChange}\n              required\n              value={props.values.lastName}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <TextField\n              disabled={props.loading}\n              error={hasError('email')}\n              fullWidth\n              helperText={getErrorMessage('email')}\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={props.handleChange}\n              required\n              type=\"email\"\n              value={props.values.email}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <TextField\n              disabled={props.loading}\n              error={hasError('phoneNumber')}\n              fullWidth\n              helperText={getErrorMessage('phoneNumber')}\n              label=\"Phone Number\"\n              name=\"phoneNumber\"\n              onChange={props.handleChange}\n              required\n              type=\"text\"\n              value={props.values.phoneNumber}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            md={12}\n            xs={12}\n          >\n            <TextField\n              disabled={props.loading}\n              fullWidth\n              label=\"Password\"\n              name=\"password\"\n              onChange={props.handleChange}\n              required\n              type=\"password\"\n              value={props.values.password}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            md={12}\n            xs={12}\n          >\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Select User Type</FormLabel>\n              <RadioGroup\n                aria-label=\"role\"\n                name=\"role\"\n                onChange={props.handleChange}\n                row\n                value={props.values.role}\n              >\n                <FormControlLabel\n                  control={<Radio\n                    color=\"primary\"\n                    required\n                  />}\n                  disabled={props.loading}\n                  label=\"Buyer\"\n                  labelPlacement=\"end\"\n                  value=\"buyer\"\n                />\n                <FormControlLabel\n                  control={<Radio\n                    color=\"primary\"\n                    required\n                  />}\n                  disabled={props.loading}\n                  label=\"Seller\"\n                  labelPlacement=\"end\"\n                  value=\"seller\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </React.Fragment>\n  )\n}\n\nexport default UserForm\n","import React from 'react'\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  TextField,\n  Divider\n} from '@material-ui/core'\nimport moment from 'moment'\n\nconst SellerInfoForm = (props) => {\n  const sellerInfoFormFields = {\n    address_details: {\n      name: 'Address Details',\n      fields: {\n        locality: {\n          grid: {\n            md: 12,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Locality',\n            name: 'locality'\n          }\n        },\n\n        streetAddress: {\n          grid: {\n            md: 12,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Street Address',\n            name: 'streetAddress'\n          }\n\n        },\n        town: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Town',\n            name: 'town'\n          }\n        },\n        state: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'State',\n            name: 'state'\n          }\n        },\n        country: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'select',\n            placeholder: 'Country',\n            name: 'country',\n            options: [\n              {\n                key: 'pak',\n                value: 'Pakistan'\n              }\n            ]\n          }\n        },\n        postalCode: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Postal Code',\n            name: 'postalCode'\n          }\n        }\n      }\n    },\n    OrdDetails: {\n      name: 'Organization Details',\n      fields: {\n        OrgName: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Organization Name',\n            name: 'OrgName'\n          }\n        },\n        EmployeeId: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Employee Id',\n            name: 'EmployeeId'\n          }\n        },\n        logo: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'file',\n            placeholder: 'Logo',\n            name: 'logo'\n          }\n        }\n      }\n    },\n    legal_details: {\n      name: 'Legal Details',\n      fields: {\n        dotNumber: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Dot Number',\n            name: 'dotNumber'\n          }\n        },\n        proLicence: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Professional Licence',\n            name: 'proLicence'\n          }\n        },\n        insurancepolicy: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Insurance Policy',\n            name: 'insurancepolicy'\n          }\n        },\n        region: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'Region',\n            name: 'region'\n          }\n        },\n        SSN: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'text',\n            placeholder: 'SSN',\n            name: 'SSN'\n          }\n        },\n        DOB: {\n          grid: {\n            md: 6,\n            xs: 12\n          },\n          input: {\n            type: 'date',\n            placeholder: 'Date of Birth',\n            name: 'DOB'\n          }\n        }\n      }\n    }\n\n  }\n  const getInputField = (grid, formValues, input) => {\n    if (input.type === 'text') {\n      return (\n        <Grid\n          item\n          md={grid.md}\n          xs={grid.xs}\n        >\n          <TextField\n            disabled={props.loading}\n            fullWidth\n            label={input.placeholder}\n            name={input.name}\n            onChange={props.handleChange}\n            type={input.type}\n            value={formValues[input.name]}\n            variant=\"outlined\"\n          />\n        </Grid>\n      )\n    } else if (input.type === 'file') {\n      return (\n        <Grid\n          item\n          md={grid.md}\n          xs={grid.xs}\n        >\n          <TextField\n            disabled={props.loading}\n            fullWidth\n            label={input.placeholder}\n            name={input.name}\n            onChange={props.handleChange}\n            type={input.type}\n            value={formValues[input.name]}\n            variant=\"outlined\"\n          />\n        </Grid>\n      )\n    } else if (input.type === 'select') {\n      return (\n        <Grid\n          item\n          md={grid.md}\n          xs={grid.xs}\n        >\n          <TextField\n            fullWidth\n            label={input.placeholder}\n            name={input.name}\n            onChange={props.handleChange}\n            select\n            // eslint-disable-next-line react/jsx-sort-props\n            SelectProps={{ native: true }}\n            value={formValues[input.name] || input.options[0]}\n            variant=\"outlined\"\n          >\n            {input.options.map(option => (\n              <option\n                key={option.key}\n                value={option.key}\n              >\n                {option.value}\n              </option>\n            ))}\n          </TextField>\n        </Grid>\n      )\n    } else if (input.type === 'date') {\n      return (\n        <Grid\n          item\n          md={grid.md}\n          xs={grid.xs}\n        >\n          <TextField\n            disabled={props.loading}\n            fullWidth\n            label={input.placeholder}\n            name={input.name}\n            onChange={props.handleChange}\n            type={input.type}\n            value={formValues[input.name]}\n            variant=\"outlined\"\n          />\n        </Grid>\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {Object.keys(sellerInfoFormFields).map(sectionKey => {\n        const section = sellerInfoFormFields[sectionKey]\n        const fields = section.fields\n        const name = section.name\n        return (\n          <React.Fragment>\n            <CardHeader title={name} />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={4}\n              >\n                {Object.keys(fields).map(fieldKey => {\n                  const field = fields[fieldKey]\n                  return getInputField(field.grid, props.values, field.input)\n                })}\n              </Grid>\n            </CardContent>\n          </React.Fragment>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default SellerInfoForm\n","import React from 'react'\nimport { CardContent, CardHeader, Divider, Grid, TextField } from '@material-ui/core'\n\nconst SellerBankingForm = (props) => {\n  const sellerBankingDetailsFormFields = {\n    bankName: {\n      type: 'text',\n      placeholder: 'Bank Name',\n      name: 'bankName'\n    },\n    accountTitle: {\n      type: 'text',\n      placeholder: 'Account Title',\n      name: 'accountTitle'\n    },\n    accountNumber: {\n      type: 'text',\n      placeholder: 'Account Number',\n      name: 'accountNumber'\n    },\n    routingNumber: {\n      type: 'text',\n      placeholder: 'Routing Number',\n      name: 'routingNumber'\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <CardHeader title=\"Banking Details\" />\n      <Divider />\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          {Object.keys(sellerBankingDetailsFormFields).map(fieldKey => {\n            const field = sellerBankingDetailsFormFields[fieldKey]\n            return (\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  disabled={props.loading}\n                  fullWidth\n                  label={field.placeholder}\n                  name={field.name}\n                  onChange={props.handleChange}\n                  type={field.type}\n                  value={props.values[field.name]}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            )\n          })}\n        </Grid>\n      </CardContent>\n\n    </React.Fragment>\n  )\n}\n\nexport default SellerBankingForm\n","import React, { useState } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\nimport {\n  Button,\n  Card,\n  CardActions,\n  Divider,\n  colors,\n  LinearProgress\n} from '@material-ui/core'\nimport UserForm from './UserForm'\nimport SellerInfoForm from './SellerInfoForm'\nimport SellerBankingForm from './SellerBankingForm'\nimport Alert from 'components/Alert'\nimport * as actions from '../../../../../../../actions'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}))\n\nconst UserCreateForm = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n  const [values, setValues] = useState({\n\n  })\n\n  const handleChange = event => {\n    event.persist()\n\n    setValues({\n      ...values,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    })\n  }\n  const getValue = (key) => {\n    if (values[key]) {\n      return values[key]\n    } else {\n      return ''\n    }\n  }\n  const handleSubmit = event => {\n    event.preventDefault()\n    let data = {\n      phoneNumber: getValue('phoneNumber'),\n      email: getValue('email'),\n      password: getValue('password'),\n      firstName: getValue('firstName'),\n      lastName: getValue('lastName'),\n      role: [\n        getValue('role')\n      ]\n    }\n\n    const sellerInfo = {\n      locality: getValue('locality'),\n      OrgName: getValue('OrgName'),\n      EmployeeId: getValue('EmployeeId'),\n      postalCode: getValue('postalCode'),\n      town: getValue('town'),\n      country: getValue('country'),\n      dotNumber: getValue('dotNumber'),\n      proLicence: getValue('proLicence'),\n      insurancepolicy: getValue('insurancepolicy'),\n      logo: getValue('logo'),\n      region: getValue('region'),\n      streetAddress: getValue('streetAddress'),\n      SSN: getValue('SSN'),\n      DOB: getValue('DOB'),\n      sellerBankingDetails: {\n        accountTitle: getValue('accountTitle'),\n        bankName: getValue('bankName'),\n        accountNumber: getValue('accountNumber'),\n        routingNumber: getValue('routingNumber')\n      }\n    }\n    if (values.role === 'seller') {\n      data = {\n        ...data,\n        sellerInfo: {\n          ...sellerInfo\n        }\n      }\n    }\n    props.onCreateUser(data)\n  }\n  let loading = null\n  let button = null\n  if (props.response.loading) {\n    loading = (\n      <div>\n        <LinearProgress />\n        <br />\n      </div>\n    )\n  } else {\n    button = (\n      <Button\n        className={classes.saveButton}\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Create User\n      </Button>\n    )\n  }\n  let responseMessage = null\n  if (props.response.error) {\n    responseMessage = (\n      <Alert\n        message={props.response.errorMessage}\n        variant=\"error\"\n      />\n    )\n  } else if (props.response.success) {\n    responseMessage = (\n      <Alert\n        message={props.response.successMessage}\n        variant=\"success\"\n      />\n    )\n  }\n  let sellerInfoForm = null\n  if (values.role === 'seller') {\n    sellerInfoForm = (\n      <React.Fragment>\n        <SellerInfoForm\n          conflicts={props.response.conflicts}\n          handleChange={handleChange}\n          loading={props.response.loading}\n          values={values}\n        />\n        <SellerBankingForm\n          conflicts={props.response.conflicts}\n          handleChange={handleChange}\n          loading={props.response.loading}\n          values={values}\n        />\n      </React.Fragment>\n    )\n  }\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {responseMessage}\n      <form onSubmit={handleSubmit}>\n        {loading}\n        <UserForm\n          conflicts={props.response.conflicts}\n          handleChange={handleChange}\n          loading={props.response.loading}\n          values={values}\n        />\n        {sellerInfoForm}\n        <Divider />\n        <CardActions>\n          {button}\n        </CardActions>\n      </form>\n    </Card>\n  )\n}\n\nUserCreateForm.propTypes = {\n  className: PropTypes.string\n}\n\nconst mapStateToProps = state => {\n  return {\n    response: state.users.create\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateUser: (data) => dispatch(actions.createUser(data))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCreateForm)\n","import React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\nimport { Grid } from '@material-ui/core'\nimport { UserCreateForm } from './components'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}))\n\nconst General = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n\n      <Grid\n        item\n      >\n        <UserCreateForm />\n      </Grid>\n    </Grid>\n  )\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n}\n\nexport default General\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}))\n\nconst Header = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        {props.title}\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {props.description}\n      </Typography>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n}\n\nexport default Header\n","import React, { Component } from 'react';\n\nclass Map extends Component {\n  googleMapRef = React.createRef();\n  state = {\n    marker: null,\n    circle:null\n  };\n\n  componentDidMount() {\n    const googleMapScript = document.createElement('script');\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${this.props.apiKey}&libraries=places`;\n    document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener('load', ()=>{\n      this.googleMap = this.createGoogleMap();\n      // this.marker = this.createMarker();\n      // this.circle = this.createCircle();\n      this.setState({marker: this.marker})\n    });\n\n\n  }\n\n  createGoogleMap = () => {\n    const map = new window.google.maps.Map(this.googleMapRef.current, {\n      zoom: 16,\n      center: {\n        lat: 43.642567,\n        lng: -79.387054,\n      },\n      disableDefaultUI: true,\n    });\n    map.addListener('click', (event) => {\n      let latLng = event.latLng;\n      if(!this.state.marker){\n        let marker = this.createMarker(latLng)\n        let circle = this.createCircle(marker)\n        this.setState({\n          marker: marker,\n          circle: circle\n        })\n      }else{\n        let marker = this.state.marker;\n        let circle = this.state.circle\n        circle.setMap(null)\n        marker.setPosition( latLng );\n        circle = this.createCircle(marker)\n        this.setState({\n          marker: marker,\n          circle: circle\n        })\n      }\n    });\n    return map\n  };\n\n  createMarker = (latLng={ lat: 43.642567, lng: -79.387054 }) => {\n    let icon = {\n      path: window.google.maps.SymbolPath.FORWARD_CLOSED_ARROW   ,\n      scale: 4,\n      fillColor: '#427af4',\n      fillOpacity: 1,\n      strokeWeight: 1,\n      anchor: new window.google.maps.Point(0, 5),\n      rotation:  0\n    };\n    return new window.google.maps.Marker({\n      position: latLng,\n      map: this.googleMap,\n      icon: icon,\n    });\n  };\n\n  createCircle = (marker=this.marker)=>{\n    return new window.google.maps.Circle({\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n      map: this.googleMap,\n      center: marker.getPosition(),\n      radius: 1000\n    });\n  }\n\n\n  render() {\n    const styles = {\n      width: this.props.width,\n      height: this.props.height\n    }\n    return (\n      <div\n        id=\"google-map\"\n        ref={this.googleMapRef}\n        style={styles}\n      />\n    );\n  }\n}\n\nexport default Map;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\nimport { Divider, colors, CardActions, Card, CardHeader } from '@material-ui/core'\nimport { creds } from 'config'\n\nimport { Page } from 'components'\nimport {\n  General,\n  Header\n} from './components'\n\nimport Map from './components/Map'\nimport clsx from 'clsx'\nimport UserForm from './components/General/components/UserCreateForm/UserForm'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nconst CircleMap = props => {\n  const classes = useStyles()\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Header\n        description=\"Create User (Seller/Buyer)\"\n        title=\"Users\"\n      />\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        <Card>\n          <CardHeader title=\"Google Map\" />\n          <Map\n            apiKey={creds.GOOGLE_MAP_API}\n            height={400}\n            width=\"100%\"\n          />\n          <Divider />\n          <CardActions />\n        </Card>\n\n      </div>\n    </Page>\n  )\n}\n\nCircleMap.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n}\n\nexport default CircleMap\n","export { default } from './CircleMap'\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}